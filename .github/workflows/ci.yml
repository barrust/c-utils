name: C/C++ CI

on: [push, pull_request]

jobs:
  linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        compiler: [gcc, g++, clang, gcc-10]
    steps:
    - uses: actions/checkout@v2
    - name: Compile Library
      env:
        CCFLAGS: "-fsanitize=undefined"
      run: |
        ${{ matrix.compiler }} --version
        make test CC=${{ matrix.compiler }}
    - name: Run Unittests
      run: make runtests

  coverage:
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [ubuntu-latest]
          compiler: [gcc]
      steps:
      - uses: actions/checkout@v2
      - name: Compile Library
        env:
          CCFLAGS: "-fsanitize=undefined"
        run: |
          ${{ matrix.compiler }} --version
          make test CC=${{ matrix.compiler }}
      - name: Run Unittests
        run: make runtests
      - name: Calculate Coverage
        run: gcov ./dist/*.gcno
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

  cppcheck:
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest]
        compiler: [gcc]
    steps:
    - uses: actions/checkout@v2
    # The following should be moved into a seperate action for only pull requests, etc.
    # where you it posts the information into the PR as a comment (optionally?)
    - name: Install cppcheck
      run: sudo apt install cppcheck
    - name: Code Quality (cppcheck)
      run: cppcheck --error-exitcode=1 --inline-suppr --enable=warning,performance,information,style --template='{file}:{line},{severity},{id},{message}' ./src/

  macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        compiler: [clang]
    steps:
    - uses: actions/checkout@v2
    - name: Compile Library
      env:
        CCFLAGS: "-fsanitize=undefined"
      run: |
        ${{ matrix.compiler }} --version
        make test CC=${{ matrix.compiler }}
    - name: Run Unittests
      run: make runtests
